{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { DOCUMENT } from \"@angular/common\";\nimport { filter, fromEvent } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nclass ClickOutsideDirective {\n  constructor(element, document) {\n    this.element = element;\n    this.document = document;\n    this.ClickOutside = new EventEmitter();\n  }\n  ngAfterViewInit() {\n    this.documentClickSubscription = fromEvent(this.document, 'click').pipe(filter(event => {\n      return !this.isInside(event.target);\n    })).subscribe(() => {\n      this.ClickOutside.emit();\n    });\n  }\n  ngOnDestroy() {\n    this.documentClickSubscription?.unsubscribe();\n  }\n  isInside(elementToCheck) {\n    return elementToCheck === this.element.nativeElement || this.element.nativeElement.contains(elementToCheck);\n  }\n  static #_ = this.ɵfac = function ClickOutsideDirective_Factory(t) {\n    return new (t || ClickOutsideDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: ClickOutsideDirective,\n    selectors: [[\"\", \"clickOutside\", \"\"]],\n    outputs: {\n      ClickOutside: \"ClickOutside\"\n    }\n  });\n}\nexport { ClickOutsideDirective };","map":{"version":3,"names":["EventEmitter","DOCUMENT","filter","fromEvent","ClickOutsideDirective","constructor","element","document","ClickOutside","ngAfterViewInit","documentClickSubscription","pipe","event","isInside","target","subscribe","emit","ngOnDestroy","unsubscribe","elementToCheck","nativeElement","contains","_","i0","ɵɵdirectiveInject","ElementRef","_2","selectors","outputs"],"sources":["/home/tom/Documents/Programming/IIS/iis_project_deleted-/frontend/src/app/navbar/clickOuside.directive.ts"],"sourcesContent":["import { AfterViewInit, Directive, ElementRef, Inject, EventEmitter, Output, OnDestroy } from \"@angular/core\";\r\nimport { DOCUMENT } from \"@angular/common\";\r\nimport { Subscription, filter, fromEvent } from \"rxjs\";\r\n@Directive({\r\n    selector: '[clickOutside]'\r\n})\r\nexport class ClickOutsideDirective implements AfterViewInit, OnDestroy{\r\n    @Output() ClickOutside = new EventEmitter<void>();\r\n\r\n    documentClickSubscription: Subscription | undefined;\r\n\r\n    constructor(private element: ElementRef, @Inject(DOCUMENT) private document: Document) { }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.documentClickSubscription = fromEvent(this.document, 'click').pipe(\r\n            filter((event) => {\r\n                return !this.isInside(event.target as HTMLElement);\r\n            })\r\n        ).subscribe(() => {\r\n            this.ClickOutside.emit();\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.documentClickSubscription?.unsubscribe();\r\n    }\r\n\r\n    isInside(elementToCheck: HTMLElement): boolean {\r\n        return elementToCheck === this.element.nativeElement || this.element.nativeElement.contains(elementToCheck)\r\n    }\r\n}"],"mappings":"AAAA,SAAuDA,YAAY,QAA2B,eAAe;AAC7G,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAAuBC,MAAM,EAAEC,SAAS,QAAQ,MAAM;;AACtD,MAGaC,qBAAqB;EAK9BC,YAAoBC,OAAmB,EAA4BC,QAAkB;IAAjE,KAAAD,OAAO,GAAPA,OAAO;IAAwC,KAAAC,QAAQ,GAARA,QAAQ;IAJjE,KAAAC,YAAY,GAAG,IAAIR,YAAY,EAAQ;EAIwC;EAEzFS,eAAeA,CAAA;IACX,IAAI,CAACC,yBAAyB,GAAGP,SAAS,CAAC,IAAI,CAACI,QAAQ,EAAE,OAAO,CAAC,CAACI,IAAI,CACnET,MAAM,CAAEU,KAAK,IAAI;MACb,OAAO,CAAC,IAAI,CAACC,QAAQ,CAACD,KAAK,CAACE,MAAqB,CAAC;IACtD,CAAC,CAAC,CACL,CAACC,SAAS,CAAC,MAAK;MACb,IAAI,CAACP,YAAY,CAACQ,IAAI,EAAE;IAC5B,CAAC,CAAC;EACN;EAEAC,WAAWA,CAAA;IACP,IAAI,CAACP,yBAAyB,EAAEQ,WAAW,EAAE;EACjD;EAEAL,QAAQA,CAACM,cAA2B;IAChC,OAAOA,cAAc,KAAK,IAAI,CAACb,OAAO,CAACc,aAAa,IAAI,IAAI,CAACd,OAAO,CAACc,aAAa,CAACC,QAAQ,CAACF,cAAc,CAAC;EAC/G;EAAC,QAAAG,CAAA,G;qBAvBQlB,qBAAqB,EAAAmB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA,GAAAF,EAAA,CAAAC,iBAAA,CAKmBvB,QAAQ;EAAA;EAAA,QAAAyB,EAAA,G;UALhDtB,qBAAqB;IAAAuB,SAAA;IAAAC,OAAA;MAAApB,YAAA;IAAA;EAAA;;SAArBJ,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}